'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.uppercase = exports.uuid = exports.url = exports.numeric = exports.mongoid = exports.mobilephone = exports.macaddress = exports.lowercase = exports.json = exports.integer = exports.isbn = exports.ip = exports.hexadecimal = exports.hexcolor = exports.float = exports.fqdn = exports.email = exports.decimal = exports.date = exports.creditcard = exports.boolean = exports.base64 = exports.alphanumeric = exports.alpha = undefined;

var _validator = require('validator');

var _validator2 = _interopRequireDefault(_validator);

var _tcombForm = require('tcomb-form');

var _tcombForm2 = _interopRequireDefault(_tcombForm);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Alpha
var alpha = exports.alpha = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isAlpha);

alpha.getValidationErrorMessage = function (value, path, context) {
  return 'May only contain letters.';
};

// Alphanumeric
var alphanumeric = exports.alphanumeric = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isAlphanumeric);

alphanumeric.getValidationErrorMessage = function (value, path, context) {
  return 'May only contain alphanumeric characters.';
};

// Base64
var base64 = exports.base64 = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isBase64);

base64.getValidationErrorMessage = function (value, path, context) {
  return 'Must be a Base64 string.';
};

// Boolean
var boolean = exports.boolean = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isBoolean);

boolean.getValidationErrorMessage = function (value, path, context) {
  return 'Must be a Boolean.';
};

// CreditCard
var creditcard = exports.creditcard = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isCreditCard);

creditcard.getValidationErrorMessage = function (value, path, context) {
  return 'Must be a valid credit card number.';
};

// Date
var date = exports.date = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isDate);

date.getValidationErrorMessage = function (value, path, context) {
  return 'Must be a valid date.';
};

// Decimal
var decimal = exports.decimal = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isDecimal);

decimal.getValidationErrorMessage = function (value, path, context) {
  return 'Must be a decimal number.';
};

// Email
var email = exports.email = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isEmail);

email.getValidationErrorMessage = function (value, path, context) {
  return 'Must be a valid email address.';
};

// FQDN
var fqdn = exports.fqdn = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isFQDN);

fqdn.getValidationErrorMessage = function (value, path, context) {
  return 'Must be a domain name.';
};

// Float
var float = exports.float = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isFloat);

float.getValidationErrorMessage = function (value, path, context) {
  return 'Must be a floating point number (1.2).';
};

// HexColor
var hexcolor = exports.hexcolor = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isHexColor);

hexcolor.getValidationErrorMessage = function (value, path, context) {
  return 'Must be a hexadecimal color (#336699).';
};

// Hexadecimal
var hexadecimal = exports.hexadecimal = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isHexadecimal);

hexadecimal.getValidationErrorMessage = function (value, path, context) {
  return 'Must be a hexadecimal number (0x19F).';
};

// IP
var ip = exports.ip = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isIP);

ip.getValidationErrorMessage = function (value, path, context) {
  return 'Must be a valid IP address (x.x.x.x).';
};

// ISBN
var isbn = exports.isbn = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isISBN);

isbn.getValidationErrorMessage = function (value, path, context) {
  return 'Must be a valid ISBN.';
};

// ISO8061Date
// export const iso8061 = t.refinement(t.String, validator.isISO8061);
//
// iso8061.getValidationErrorMessage = (value, path, context) => 'Must be a valid ISO8061 date.';

// Integer
var integer = exports.integer = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isInt);

integer.getValidationErrorMessage = function (value, path, context) {
  return 'Must be an integer number.';
};

// JSON
var json = exports.json = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isJSON);

json.getValidationErrorMessage = function (value, path, context) {
  return 'Must be valid JSON.';
};

// Lowercase
var lowercase = exports.lowercase = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isLowercase);

lowercase.getValidationErrorMessage = function (value, path, context) {
  return 'Must be only lower case characters.';
};

// MACAddress
var macaddress = exports.macaddress = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isMACAddress);

macaddress.getValidationErrorMessage = function (value, path, context) {
  return 'Must be a valid MAC address.';
};

// MobilePhone
var mobilephone = exports.mobilephone = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isMobilePhone);

mobilephone.getValidationErrorMessage = function (value, path, context) {
  return 'Must be a valid mobile phone number.';
};

// MongoId
var mongoid = exports.mongoid = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isMongoId);

mongoid.getValidationErrorMessage = function (value, path, context) {
  return 'Must be a valid MongoDB id.';
};

// Numeric
var numeric = exports.numeric = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isNumeric);

numeric.getValidationErrorMessage = function (value, path, context) {
  return 'Must be a number.';
};

// URL
var url = exports.url = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isURL);

url.getValidationErrorMessage = function (value, path, context) {
  return 'Must be a valid URL.';
};

// UUID
var uuid = exports.uuid = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isUUID);

uuid.getValidationErrorMessage = function (value, path, context) {
  return 'Must be a valid UUID.';
};

// Uppercase
var uppercase = exports.uppercase = _tcombForm2.default.refinement(_tcombForm2.default.String, _validator2.default.isUppercase);

uppercase.getValidationErrorMessage = function (value, path, context) {
  return 'Must be only upper case characters.';
};
//# sourceMappingURL=data:application/json;base64,
